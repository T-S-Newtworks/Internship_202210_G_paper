@model Internship_Template.Models.VM.先生一覧画面

@{
    ViewBag.Title = "Profile";
}

@Scripts.Render("~/Script/common")
@Styles.Render("~/Content/common")


<script>
    function BackToDetail(e) {
        var e = e || window.event;
        var elem = e.currentTarget;
        var id = elem.value;
        var url = location.protocol + "//" + location.host + "/Doctors/Detail?id=" + id;
        location.href = url;
    }

</script>

<style>

    .txtDisp {
        border-top: none;
        border-left: none;
        border-right: none;
        border-radius: 0;
        padding-left: 1.5rem;
        padding-right: 1.5rem;
    }

    .s200.avatar {
        width: 200px;
        height: 200px;
        margin-right: 10px;
    }
</style>

<div id="content" class="topSpace">
    <div>
        <h1 class="profileTitle">
            先生情報編集画面
        </h1>
    </div>

    @using (Html.BeginForm("EditComplete", "Doctors", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="profileContent">
            <div class="card profileCard">
                <div class="card-header text-white sysBaseColor">
                    <i class="fas fa-user-cog">先生情報編集</i>
                </div>
                <div class="card-body">
                    <div class="container">
                        <div class="row">
                            <div class="form-group col-6 pb-4">
                                <div class="row inputItem">
                                    <label class="itemLabel">ID</label>
                                    <div class="form-group">
                                        <label>@Model.TargetDoctor.ID</label>
                                    </div>
                                        @*<label class="itemLabel">ID</label>
            <div class="form-group">
                @Html.EditorFor(model => model.TargetDoctor.ID, new { htmlAttributes = new { @class = "textBox form-control" } })

            </div>*@
                                    </div>
                                    <div class="row inputItem">
                                        <label class="itemLabel">名前</label>
                                        <div class="form-group">
                                            @Html.EditorFor(model => model.TargetDoctor.NAME, new { htmlAttributes = new { @class = "textBox form-control" } })

                                        </div>
                                    </div>
                                    <div class="row inputItem">
                                        <label class="itemLabel">年齢</label>
                                        <div class="form-group">
                                            @Html.EditorFor(model => model.TargetDoctor.AGE, new { htmlAttributes = new { @class = "textBox form-control", @step="1" } })
                                           
                     
                                            <!--<input type="text" class="textBox form-control" value="@Model.TargetDoctor.AGE"  />-->
                                                
                                        </div>
                                    </div>
                                    <div class="row inputItem">
                                        <label class="itemLabel">性別</label>
                                        <div class="form-group">
                                            @Html.EditorFor(model => model.TargetDoctor.GENDER, new { htmlAttributes = new { @class = "textBox form-control" } })
                                        </div>
                                    </div>
                                    <div class="row inputItem">
                                        <label class="itemLabel">所属</label>
                                        <div class="form-group">
                                            @*@Html.DropDownListFor(
                                                model => model.HospitalsList,
                                                (IEnumerable<SelectListItem>)Model.HospitalsList,
                                                "選択",
                                                new { @class = "pulldown" }
                                                )*@
                                            <label>@Model.DoctorHospital.NAME</label>
                                            @*@Html.EditorFor(model => model.TargetDoctor.HOSPITAL_ID, new { htmlAttributes = new { @class = "textBox form-control" } })
                                            *@
                                        </div>
                                    </div>
                                    <div class="row inputItem">
                                        <label class="itemLabel">専門</label>
                                        <div class="form-group">
                                            <label>@Model.DoctorDepartment.NAME</label>
                                            @*@Html.EditorFor(model => model.TargetDoctor.DEPARTMENT_CD, new { htmlAttributes = new { @class = "textBox form-control" } })
                                            *@
                                        </div>
                                    </div>
                                    <!--TODO: パスワードの変更を実装していない。できるようにすると良いでしょう-->
                                    @*<label>パスワード</label>
        <div class="form-inline">
            @Html.PasswordFor(model => model.TargetUser.T_LOGIN.PASSWORD, htmlAttributes: new { @class = "textBox form-control" })
            @Html.ValidationMessageFor(model => model.TargetUser.T_LOGIN.PASSWORD, "", new { @id = "requiredPassWord" })
        </div>*@
                                </div>
                            @Html.HiddenFor(model => model.TargetDoctor.ID, new { Value = @Model.TargetDoctor.ID })
                            @Html.HiddenFor(model => model.TargetDoctor.NAME, new { Value = @Model.TargetDoctor.NAME })
                            @Html.HiddenFor(model => model.TargetDoctor.AGE, new { Value = @Model.TargetDoctor.AGE })
                            @Html.HiddenFor(model => model.TargetDoctor.GENDER, new { Value = @Model.TargetDoctor.GENDER })
                        </div>
                    </div>
                </div>
            </div>
            <div class="buttonContent">
                <button type="submit" class="btn btnDefault sysBaseColor profileButton">
                    <i class="fas fa-pen-alt">
                        確定
                    </i>
                </button>
                <button type="button" class="btn btn-secondary profileButton" value="@Model.TargetDoctor.ID" onclick="BackToDetail()">
                    <i class="fas fa-reply">
                        戻る
                    </i>
                </button>
            </div>
        </div>
    }
</div>




